openapi: "3.0.0"
info:
  title: "Ecomm App"
  description: "REST API Documentation"
  version: 1.0.0

servers:
  - url: "http://localhost:3000/api/v1"
    description: Local Environment

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /auth/signup:
    post:
      summary: "User SignUp"
      tags:
        - Auth
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: Returns user id
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /auth/login:
    post:
      summary: "User login"
      tags:
        - Auth
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        200:
          description: Returns jsonwebtoken
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error

  /auth/logout:
    get:
      summary: "User logout"
      tags:
        - Auth
      produces:
        - application/json
      responses:
        200:
          description: Returns logout response
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /auth/profile:
    get:
      summary: "Get User Profile"
      security:
        - BearerAuth: []
      tags:
        - Auth
      produces:
        - application/json
      responses:
        200:
          description: Returns user profile
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /collection:
    post:
      summary: "Create new a collection"
      security:
        - BearerAuth: []
      tags:
        - Collection
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Collection created
        400:
          description: Bad request
        500:
          description: Internal Server Error

    get:
      summary: "Get all collection"
      security:
        - BearerAuth: []
      tags:
        - Collection
      produces:
        - application/json
      responses:
        200:
          description: Returns all collections
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /collection/{id}:
    put:
      summary: "Update a Collection"
      security:
        - BearerAuth: []
      tags:
        - Collection
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        200:
          description: Collection updated
        400:
          description: Bad request
        500:
          description: Internal Server Error

    delete:
      summary: "Delete a collection"
      security:
        - BearerAuth: []
      tags:
        - Collection
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Collection deleted
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /product:
    post:
      summary: "Create new a product"
      security:
        - BearerAuth: []
      tags:
        - Product
      consumes:
        - multipart/form-data
      produces:
        - application/json
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: integer
                description:
                  type: string
                collectionId:
                  type: string
                stock:
                  type: integer
                sold:
                  type: integer
                photos:
                  type: string
                  format: base64
      responses:
        201:
          description: Product created
        400:
          description: Bad request
        500:
          description: Internal Server Error

    get:
      summary: "Get all product"
      security:
        - BearerAuth: []
      tags:
        - Product
      produces:
        - application/json
      responses:
        200:
          description: Returns all Product
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /product/{id}:
    delete:
      summary: "Delete a product"
      security:
        - BearerAuth: []
      tags:
        - Product
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: Product deleted
        400:
          description: Bad request
        404:
          description: Product not found
        500:
          description: Internal Server Error

    get:
      summary: "Get Product by a CollectionId"
      security:
        - BearerAuth: []
      tags:
        - Product
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: Returns all collections
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /coupon:
    post:
      summary: "Create new a coupon"
      security:
        - BearerAuth: []
      tags:
        - Coupon
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                discount:
                  type: number
                active:
                  type: boolean
      responses:
        201:
          description: Coupon Created
        400:
          description: Bad request
        500:
          description: Internal Server Error

    get:
      summary: "Get all coupons"
      security:
        - BearerAuth: []
      tags:
        - Coupon
      produces:
        - application/json
      responses:
        200:
          description: Returns all Coupons
        400:
          description: Bad request
        500:
          description: Internal Server Error

  /coupon/{id}:
    delete:
      summary: "Delete a coupon"
      security:
        - BearerAuth: []
      tags:
        - Coupon
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      produces:
        - application/json
      responses:
        200:
          description: Product deleted
        400:
          description: Bad request
        404:
          description: Product not found
        500:
          description: Internal Server Error

    put:
      summary: "Update a coupon"
      security:
        - BearerAuth: []
      tags:
        - Coupon
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                discount:
                  type: number
                active:
                  type: boolean
      responses:
        200:
          description: Coupon updated
        400:
          description: Bad request
        500:
          description: Internal Server Error